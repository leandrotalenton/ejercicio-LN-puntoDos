@use "../mixins/responsive";
@use "../mixins/fonts";
@use "../mixins/images";
@use "../mixins/colors";

/* general styles for all cards */
.card a{
    display: flex;
    flex-direction: column;
    background-color: map-get(colors.$colors , 'component' , 'background' );

    @include responsive.respondTo('desktop'){
        &:hover{
            opacity: 80%;
            transition: 200ms ease-out;
        }
    }

    h2 {
        @include fonts.cardTitle;
        text-align: center;
        padding: 2rem 2rem 1rem 2rem;
        margin: 2.5rem 2.5rem 0rem 2.5rem;
        border: 0.125rem solid map-get(colors.$colors , 'component' , 'border' );
        border-bottom: none;

        em {
            @include fonts.cardTitleLead;
        }

        @include responsive.respondTo('tablet'){
            text-align: left;
        }
    }

    &>p {
        @include fonts.cardParagraph;
        margin: 0 2rem 1rem 2rem;
        order: 2;
    }

    address {
        flex-grow: 1;
        border: 0.125rem solid map-get(colors.$colors , 'component' , 'border' );
        border-top: none;
        display: flex;
        gap: 1rem;
        align-items: center;
        flex-direction: column;
        margin: 0rem 2.5rem 2rem 2.5rem;
        padding: 0rem 2rem 2rem 2rem;
        justify-content: end;
        position: relative;

        p {
            @include fonts.cardAuthorAuthor;
        }

        img{
            @include images.imagePropertys;
            width: 7.07rem;
            height: 7.07rem;
            border-radius: 50%;
            border: 0.125rem solid map-get(colors.$colors , 'component' , 'background' );
        }
        
        &::after{
            content: "";
            width: 7.07rem;
            height: 0.125rem;
            background-color: map-get(colors.$colors , 'component' , 'borderRich' );
            position: absolute;
            bottom: -0.125rem;

            @include responsive.respondTo('tablet'){
                display: none;
            }
        }

        @include responsive.respondTo('tablet'){
            flex-direction: row;
            justify-content: flex-start;
        }
    }

    /* styles that exclude "card author" cards */
    >.mediaContainer{
        position: relative;
        margin-bottom: 1rem;
        aspect-ratio: 3/2;
        overflow: hidden;
        border: 0.125rem solid map-get(colors.$colors , 'component' , 'border' );
        display: flex;
        justify-content: center;

        & img{
            @include images.imagePropertys;
            width: 100%;
        }

        &~h2{
            padding: 0;
            text-align: left;
            margin: 0;
            border: none;
            order: 0;
            margin: 0 2rem 1rem 2rem;

            @include responsive.respondTo('tablet'){
                margin: 0 0rem 1rem 0rem;
            }
        }

        &~address {
            flex-direction: row;
            margin: 0;
            border: none;
            margin: 0 2rem 1rem 2rem;
            padding: 0;
            justify-content: left;
            align-items: flex-end;
            order: 3;

            @include responsive.respondTo('tablet'){
                margin: 0 0rem 1rem 0rem;
            }

            p {
                @include fonts.cardRegularAuthor;
                line-height: 3rem;
            }

            &::after{
                display: none;
            }
        }
}

    /* styles only for left focal card */
    >p{
        @include responsive.respondTo('tablet'){
            margin: 0 0rem 1rem 0rem;
        }

        &~h2{
            @include fonts.cardTitleFocal;
            & em{
                @include fonts.cardTitleFocalLead;
            }
        }
        
        &~.mediaContainer{
            @include responsive.respondTo('tablet'){
                order: 4;
                margin-top: 1rem;
                margin-bottom: 0;
            }
        }
    }

}

